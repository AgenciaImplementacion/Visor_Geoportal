<!-- SEARCH -->
<div id="wrap">
    <form action="" autocomplete="on" id="search">
        <input id="tsearch" name="search" type="text" class="" placeholder="">
    </form>
</div>
<style>
    .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default{
        background: none;
        border: 1px solid white;
        color:#333;
    }
    .ui-dialog-titlebar-close{
        top:10px !important;
    }
    .ui-dialog .ui-dialog-title{
        width: 80%;
    }
</style>

<script>
    var searchTimer;

    var datawms = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('q'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        local: []
    });

    var sg;

    var srch = $('#tsearch').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        display: 'name',
        value: 'value',
        source: datawms,
        templates: {
            header: '<h3 class="league-name">Búsqueda en capas</h3>',
            suggestion: Handlebars.compile('<div>En la capa <strong>{{name}}</strong> se tienen <strong>{{hits}}</strong> coincidencias</div>')
        }
    }).on('typeahead:selected', function (ev, suggestion) {

        var searchOptions = {
            maxFeatures: 100,
            matchCase: false,
            isExact: false,
            searchAllLayers: true,
            bboxFilter: null,
            crs: map.getProjection()
        };

        var options = {
            maxFeatures: searchOptions.maxFeatures,
            matchCase: searchOptions.matchCase,
            bboxFilter: searchOptions.bboxFilter,
            crs: searchOptions.crs,
            likeSearch: !searchOptions.isExact
        };

        var layerConfig_i = catalog.getLayerConfigById(suggestion.value);
        var layerTitle = layerConfig_i.getTitle();
        var layerName = null;
        var attributes = null;
        if (layerConfig_i.getSource() === "wms") {
            layerName = layerConfig_i.getName();
            attributes = layerConfig_i.getAttributes();

        } else if (layerConfig_i.getSource() === "wms_multi_layer") {
            layerName = layerConfig_i.getNameByTitle(layerTitle);
            attributes = layerConfig_i.getAttributes(layerName);
        }

        var searchParameters = {
            url: layerConfig_i.getUrl(),
            layerName: layerName,
            onlyHits: true,
            layerAttributeList: attributes,
            searchTerm: suggestion.q,
            searchOptions: options
        };

        featureGridPanel.startLoading(suggestion.value, suggestion.name, searchParameters, suggestion.hits, function (success) {
        });
        sg = "";
        setTimeout(function () {
            srch.val(sg).trigger("input");
        }, 10);
    }).on('typeahead:change', function (ev, suggestion) {
        sg = suggestion.toString().trim();
        setTimeout(function () {
            srch.val(sg).trigger("input");
        }.bind(this), 1);
    }).on('keyup', function (ev) {
        ev.stopPropagation();
        ev.preventDefault();
        if (ev.keyCode === 13) {
            var mmm = searchP.requests.submit(srch.val(), false, true);
            Promise.all(mmm).then((function (m) {
                m = m.filter(function (res) {
                    return res !== null;
                });
                for (var i = 0; i < m.length; i++) {
                    m[i]["q"] = srch.val();
                }
                datawms.clear();
                datawms.local = m;
                datawms.initialize(true);
                let t = srch.val();
                srch.val(t + " ").trigger("input");
                srch.val(t);
            }), function () {
                console.log("ERROR");
            });
        }
    });

</script>

<!-- END SEARCH -->